{"ast":null,"code":"var _jsxFileName = \"/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/post/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { getPosts, deletePost, likePost, getAllPosts } from \"./../../_actions/getPosts\";\nimport { getBookmarks, addBookmark, removeBookmark } from \"./../../_actions/bookmarks\";\nimport './Post.css';\nimport { Avatar } from \"@material-ui/core\";\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport axios from 'axios';\nimport { Item, Icon, Button } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Post(props) {\n  _s();\n\n  const id = props.id;\n  const token = props.token;\n  const tweets = props.tweet;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  console.log(props);\n  useEffect(() => {\n    if (props.tabName === \"home\") {\n      dispatch(getAllPosts());\n    } else if (props.tabName === \"profile\") {\n      console.log(id);\n      dispatch(getPosts(id));\n    } else if (props.tabName === \"bookmarks\") {\n      console.log(\"IM IN BOOKMARKS\");\n      dispatch(getBookmarks(id, token));\n    }\n\n    ;\n  }, [id, token, dispatch]);\n  let posts; //  const posts = useSelector((state) => state.handlePost.postData) || []\n\n  const dbInfo = useSelector(state => state) || [];\n\n  if (props.tabName === \"home\" || props.tabName === \"profile\") {\n    posts = dbInfo.handlePost.postData;\n  } else if (props.tabName === \"bookmarks\") {\n    posts = dbInfo.bookmarks.bookmarks;\n  }\n\n  console.log(posts, props.tabName); // console.log(dbPost,dbInfo);\n\n  return (\n    /*#__PURE__*/\n    // <></>\n    _jsxDEV(_Fragment, {\n      children: posts.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: posts.map(post => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__avatar\",\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: \"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__body\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post__header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post__headerText\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [post.author.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"post_headerSpecial\",\n                      children: [/*#__PURE__*/_jsxDEV(VerifiedUserIcon, {\n                        className: \"post_badge\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 72,\n                        columnNumber: 41\n                      }, this), \" @\", post.author.email]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post__headerDescription\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: post.article\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post__footer\",\n                  children: [/*#__PURE__*/_jsxDEV(ChatBubbleOutlineIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 33\n                  }, this), post.author._id === id ? /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: e => {\n                      dispatch(deletePost(post._id, token));\n                      history.push(`/${props.tabName}`);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(RepeatIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 41\n                    }, this), \"Delete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 63\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: e => {\n                      dispatch(likePost(post._id, token)); // history.push(`/${props.tabName}`) \n                      // window.location.reload(false); \n                    },\n                    children: [/*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 41\n                    }, this), \" Likes:  \", post.likes.length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 33\n                  }, this), props.tabName !== \"bookmarks\" ? /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: e => {\n                      dispatch(addBookmark(id, post, token));\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(PublishIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 41\n                    }, this), \" Bookmark\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 66\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: e => {\n                      dispatch(addBookmark(id, post, token));\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(PublishIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 41\n                    }, this), \" Unbookmark\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 34\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false)\n    }, void 0, false)\n  );\n}\n\n_s(Post, \"TphWNVRGzEca0duX0bQS51MFvNQ=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/post/Post.js"],"names":["React","useEffect","useDispatch","useSelector","useHistory","getPosts","deletePost","likePost","getAllPosts","getBookmarks","addBookmark","removeBookmark","Avatar","VerifiedUserIcon","ChatBubbleOutlineIcon","RepeatIcon","FavoriteBorderIcon","PublishIcon","axios","Item","Icon","Button","Post","props","id","token","tweets","tweet","dispatch","history","console","log","tabName","posts","dbInfo","state","handlePost","postData","bookmarks","length","map","post","author","name","email","article","_id","e","push","likes"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { getPosts, deletePost, likePost, getAllPosts } from \"./../../_actions/getPosts\";\nimport { getBookmarks, addBookmark, removeBookmark } from \"./../../_actions/bookmarks\";\n\n\nimport './Post.css'\nimport { Avatar} from \"@material-ui/core\"\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport axios from 'axios';\nimport { Item, Icon, Button } from \"semantic-ui-react\";\nfunction Post(props) {\n    const id= props.id;\n    const token =props.token;\n    const tweets=props.tweet;\n    const dispatch = useDispatch();\n    const history = useHistory();\nconsole.log(props);\n\n    useEffect (()=>{\n        if(props.tabName===\"home\"){\n            dispatch(getAllPosts());\n\n        }else if(props.tabName===\"profile\"){\n            console.log(id)\n            dispatch(getPosts(id));\n        }else if(props.tabName===\"bookmarks\"){\n            console.log(\"IM IN BOOKMARKS\");\n            dispatch(getBookmarks(id,token))\n        }\n        \n        \n        ;\n    },[id,token,dispatch]);\n    \nlet posts;\n    //  const posts = useSelector((state) => state.handlePost.postData) || []\n    const dbInfo = useSelector((state) => state) || []\n    if(props.tabName===\"home\" || props.tabName===\"profile\"){\n        posts= dbInfo.handlePost.postData;\n    }else if(props.tabName===\"bookmarks\"){\n        posts=dbInfo.bookmarks.bookmarks\n    }\n \n    console.log(posts, props.tabName);\n    // console.log(dbPost,dbInfo);\n    \n    return (\n    // <></>\n    <>\n      {posts.length!==0?(\n          <>\n            {posts.map((post)=>{\n                return(\n\n                <div className=\"post\">\n                   <div className=\"post__avatar\">\n                        <Avatar src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\n                    </div> \n                    <div className=\"post__body\">\n                        <div className=\"post__header\">\n                            <div className=\"post__headerText\">\n                                <h3>\n\n                                    {post.author.name}\n                                    <span className=\"post_headerSpecial\">\n                                        <VerifiedUserIcon className=\"post_badge\" /> @{post.author.email}\n                                    </span>\n                                </h3>\n\n                            </div>\n\n                            <div className=\"post__headerDescription\">\n                                <p>\n                                   {post.article}\n                                </p>\n\n                            </div>\n\n                            {/* <img src=\"https://images.unsplash.com/photo-1518965493882-35b838ace024?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8Z2lmfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60s\" alt=\"\"/> */}\n\n                            <div className=\"post__footer\">\n                                <ChatBubbleOutlineIcon fontSize=\"small\"/>\n\n                                    {post.author._id === id ? <Button\n                                        onClick={(e) => {\n                                            dispatch(deletePost(post._id, token));\n                                            history.push(`/${props.tabName}`)\n                                        }}\n                                    >\n                                        <RepeatIcon fontSize=\"small\" />Delete\n                      </Button> : <></>}\n                                    \n                                \n                                {/* <FavoriteBorderIcon fontSize=\"small\"/>{props.post.likes.length} */}\n                                <Button\n                                    onClick={(e) => {\n                                        dispatch(likePost(post._id, token));\n                                        // history.push(`/${props.tabName}`) \n                                        // window.location.reload(false); \n                                    \n                                    }}\n                                >\n                                        <FavoriteBorderIcon fontSize=\"small\" /> Likes:  {post.likes.length}\n                            </Button>\n\n                                {/* {post.likes.length} */}\n                                {props.tabName !== \"bookmarks\" ? <Button\n                                        onClick={(e) => {\n                                            dispatch(addBookmark(id, post, token));\n                                        }}\n                                    >\n                                        <PublishIcon fontSize=\"small\" /> Bookmark\n                                 </Button> \n                                 :\n\n                                 <Button\n                                        onClick={(e) => {\n                                            dispatch(addBookmark(id, post, token));\n                                            }}\n                                    >\n                                        <PublishIcon fontSize=\"small\" /> Unbookmark\n                                 </Button> \n                                 }\n                              \n                             \n\n                            </div>\n                        </div>\n\n\n                    </div>\n\n                </div>\n                );\n            })}\n\n          </>\n      ):\n      <>\n      {/* <h1>NO POST FOUND</h1> */}\n      <></>\n\n      </>\n      \n      \n      }\n     </>\n    \n    \n    );\n\n\n\n\n\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}