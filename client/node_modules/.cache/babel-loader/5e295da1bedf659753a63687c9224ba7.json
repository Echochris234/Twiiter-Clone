{"ast":null,"code":"var _jsxFileName = \"/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/post/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { getPosts, deletePost, likePost, getAllPosts } from \"./../../_actions/getPosts\";\nimport { getBookmarks, addBookmark, removeBookmark } from \"./../../_actions/bookmarks\";\nimport './Post.css';\nimport { Avatar } from \"@material-ui/core\";\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport axios from 'axios';\nimport { Item, Icon, Button } from \"semantic-ui-react\";\nimport Autolinker from 'autolinker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Post(props) {\n  _s();\n\n  const id = props.id;\n  const token = props.token;\n  const tweets = props.tweet;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  var autolinker = new Autolinker({\n    newWindow: false,\n    truncate: 25\n  });\n  console.log(props);\n  useEffect(() => {\n    if (props.tabName === \"home\") {\n      dispatch(getAllPosts());\n    } else if (props.tabName === \"profile\") {\n      console.log(id);\n      dispatch(getPosts(id));\n    }\n\n    ;\n  }, [id,, dispatch]); // let posts;\n\n  let posts = useSelector(state => state.handlePost.postData) || [];\n  const dbInfo = useSelector(state => state) || []; // if(props.tabName===\"home\" || props.tabName===\"profile\"){\n  //     posts= dbInfo.handlePost.postData;\n  // }else if(props.tabName===\"bookmarks\"){\n  //     posts=dbInfo.bookmarks.bookmarks\n  // }\n  // console.log(posts, props.tabName);\n  // console.log(dbPost,dbInfo);\n\n  return (\n    /*#__PURE__*/\n    // <></>\n    _jsxDEV(_Fragment, {\n      children: posts.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: posts.map(post => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__avatar\",\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: \"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__body\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post__header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post__headerText\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [post.author.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"post_headerSpecial\",\n                      children: [/*#__PURE__*/_jsxDEV(VerifiedUserIcon, {\n                        className: \"post_badge\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 41\n                      }, this), \" @\", post.author.email]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post__headerDescription\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [autolinker.link(post.article), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"http://google.com\",\n                      children: \"google.com\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post__footer\",\n                  children: [/*#__PURE__*/_jsxDEV(ChatBubbleOutlineIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 33\n                  }, this), post.author._id === id ? /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: e => {\n                      dispatch(deletePost(post._id, token));\n                      history.push(`/${props.tabName}`);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {\n                      fontSize: \"small\",\n                      style: {\n                        color: \"black\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 41\n                    }, this), \" Delete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 63\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    disabled: \"true\",\n                    onClick: e => {\n                      dispatch(deletePost(post._id, token));\n                      history.push(`/${props.tabName}`);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {\n                      fontSize: \"small\",\n                      style: {\n                        color: \"black\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 41\n                    }, this), \" Delete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: e => {\n                      dispatch(likePost(post._id, token)); // history.push(`/${props.tabName}`) \n                      // window.location.reload(false); \n                    },\n                    children: [/*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {\n                      fontSize: \"small\",\n                      style: {\n                        color: \"red\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 41\n                    }, this), \" Likes:  \", post.likes.length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: e => {\n                      dispatch(addBookmark(id, post, token));\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(BookmarkBorderIcon, {\n                      fontSize: \"small\",\n                      style: {\n                        color: \"blue\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 41\n                    }, this), \" Bookmark\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false)\n    }, void 0, false)\n  );\n}\n\n_s(Post, \"P5SF3bqQK6GN7Be/dsa6rmlMN7I=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/post/Post.js"],"names":["React","useEffect","useDispatch","useSelector","useHistory","getPosts","deletePost","likePost","getAllPosts","getBookmarks","addBookmark","removeBookmark","Avatar","VerifiedUserIcon","ChatBubbleOutlineIcon","RepeatIcon","FavoriteBorderIcon","PublishIcon","DeleteOutlineIcon","BookmarkBorderIcon","axios","Item","Icon","Button","Autolinker","Post","props","id","token","tweets","tweet","dispatch","history","autolinker","newWindow","truncate","console","log","tabName","posts","state","handlePost","postData","dbInfo","length","map","post","author","name","email","link","article","_id","e","push","color","likes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,QAA/B,EAAyCC,WAAzC,QAA4D,2BAA5D;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,cAApC,QAA0D,4BAA1D;AAGA,OAAO,YAAP;AACA,SAASC,MAAT,QAAsB,mBAAtB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;AAEA,OAAOC,UAAP,MAAuB,YAAvB;;;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAMC,EAAE,GAAED,KAAK,CAACC,EAAhB;AACA,QAAMC,KAAK,GAAEF,KAAK,CAACE,KAAnB;AACA,QAAMC,MAAM,GAACH,KAAK,CAACI,KAAnB;AACA,QAAMC,QAAQ,GAAG7B,WAAW,EAA5B;AACA,QAAM8B,OAAO,GAAG5B,UAAU,EAA1B;AAEA,MAAI6B,UAAU,GAAG,IAAIT,UAAJ,CAAe;AAAEU,IAAAA,SAAS,EAAE,KAAb;AAAoBC,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAjB;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEIzB,EAAAA,SAAS,CAAE,MAAI;AACX,QAAGyB,KAAK,CAACY,OAAN,KAAgB,MAAnB,EAA0B;AACtBP,MAAAA,QAAQ,CAACvB,WAAW,EAAZ,CAAR;AAEH,KAHD,MAGM,IAAGkB,KAAK,CAACY,OAAN,KAAgB,SAAnB,EAA6B;AAC/BF,MAAAA,OAAO,CAACC,GAAR,CAAYV,EAAZ;AACAI,MAAAA,QAAQ,CAAC1B,QAAQ,CAACsB,EAAD,CAAT,CAAR;AACH;;AAED;AACH,GAVQ,EAUP,CAACA,EAAD,GAAKI,QAAL,CAVO,CAAT,CAViB,CAsBrB;;AACK,MAAIQ,KAAK,GAAGpC,WAAW,CAAEqC,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,QAA7B,CAAX,IAAqD,EAAjE;AAED,QAAMC,MAAM,GAAGxC,WAAW,CAAEqC,KAAD,IAAWA,KAAZ,CAAX,IAAiC,EAAhD,CAzBiB,CA0BjB;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AAAA;AAEA;AACA;AAAA,gBACGD,KAAK,CAACK,MAAN,KAAe,CAAf,gBACG;AAAA,kBACGL,KAAK,CAACM,GAAN,CAAWC,IAAD,IAAQ;AACf,8BAEA;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACG;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,qCACK,QAAC,MAAD;AAAQ,gBAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,oBADH,eAII;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,yCACI;AAAA,+BAEKA,IAAI,CAACC,MAAL,CAAYC,IAFjB,eAGI;AAAM,sBAAA,SAAS,EAAC,oBAAhB;AAAA,8CACI,QAAC,gBAAD;AAAkB,wBAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,8BADJ,QACkDF,IAAI,CAACC,MAAL,CAAYE,KAD9D;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAYI;AAAK,kBAAA,SAAS,EAAC,yBAAf;AAAA,yCACI;AAAA,+BACKhB,UAAU,CAACiB,IAAX,CAAiBJ,IAAI,CAACK,OAAtB,CADL,eAIQ;AAAG,sBAAA,IAAI,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAZJ,eAwBI;AAAK,kBAAA,SAAS,EAAC,cAAf;AAAA,0CACI,QAAC,qBAAD;AAAuB,oBAAA,QAAQ,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,0BADJ,EAGSL,IAAI,CAACC,MAAL,CAAYK,GAAZ,KAAoBzB,EAApB,gBAAyB,QAAC,MAAD;AACtB,oBAAA,OAAO,EAAG0B,CAAD,IAAO;AACZtB,sBAAAA,QAAQ,CAACzB,UAAU,CAACwC,IAAI,CAACM,GAAN,EAAWxB,KAAX,CAAX,CAAR;AACAI,sBAAAA,OAAO,CAACsB,IAAR,CAAc,IAAG5B,KAAK,CAACY,OAAQ,EAA/B;AACH,qBAJqB;AAAA,4CAMtB,QAAC,iBAAD;AAAmB,sBAAA,QAAQ,EAAC,OAA5B;AAAoC,sBAAA,KAAK,EAAE;AAAEiB,wBAAAA,KAAK,EAAE;AAAT;AAA3C;AAAA;AAAA;AAAA;AAAA,4BANsB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAzB,gBAQb,QAAC,MAAD;AAAQ,oBAAA,QAAQ,EAAC,MAAjB;AACgB,oBAAA,OAAO,EAAGF,CAAD,IAAO;AACZtB,sBAAAA,QAAQ,CAACzB,UAAU,CAACwC,IAAI,CAACM,GAAN,EAAWxB,KAAX,CAAX,CAAR;AACAI,sBAAAA,OAAO,CAACsB,IAAR,CAAc,IAAG5B,KAAK,CAACY,OAAQ,EAA/B;AACH,qBAJjB;AAAA,4CAMgB,QAAC,iBAAD;AAAmB,sBAAA,QAAQ,EAAC,OAA5B;AAAoC,sBAAA,KAAK,EAAE;AAAEiB,wBAAAA,KAAK,EAAE;AAAT;AAA3C;AAAA;AAAA;AAAA;AAAA,4BANhB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXI,eAsBI,QAAC,MAAD;AACI,oBAAA,OAAO,EAAGF,CAAD,IAAO;AACZtB,sBAAAA,QAAQ,CAACxB,QAAQ,CAACuC,IAAI,CAACM,GAAN,EAAWxB,KAAX,CAAT,CAAR,CADY,CAEZ;AACA;AAEH,qBANL;AAAA,4CAQQ,QAAC,kBAAD;AAAoB,sBAAA,QAAQ,EAAC,OAA7B;AAAqC,sBAAA,KAAK,EAAE;AAAE2B,wBAAAA,KAAK,EAAE;AAAT;AAA5C;AAAA;AAAA;AAAA;AAAA,4BARR,eAQkFT,IAAI,CAACU,KAAL,CAAWZ,MAR7F;AAAA;AAAA;AAAA;AAAA;AAAA,0BAtBJ,eAoDQ,QAAC,MAAD;AACI,oBAAA,OAAO,EAAGS,CAAD,IAAO;AACZtB,sBAAAA,QAAQ,CAACrB,WAAW,CAACiB,EAAD,EAAKmB,IAAL,EAAWlB,KAAX,CAAZ,CAAR;AACH,qBAHL;AAAA,4CAKI,QAAC,kBAAD;AAAoB,sBAAA,QAAQ,EAAC,OAA7B;AAAqC,sBAAA,KAAK,EAAE;AAAE2B,wBAAAA,KAAK,EAAE;AAAT;AAA5C;AAAA;AAAA;AAAA;AAAA,4BALJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BApDR;AAAA;AAAA;AAAA;AAAA;AAAA,wBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAqGH,SAtGA;AADH,uBADH,gBA4GD;AAAA,+BAEA;AAFA;AA7GF;AAHA;AAiIH;;GApKQ9B,I;UAIYvB,W,EACDE,U,EAkBHD,W,EAEEA,W;;;KAzBVsB,I;AAsKT,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { getPosts, deletePost, likePost, getAllPosts } from \"./../../_actions/getPosts\";\nimport { getBookmarks, addBookmark, removeBookmark } from \"./../../_actions/bookmarks\";\n\n\nimport './Post.css'\nimport { Avatar} from \"@material-ui/core\"\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport axios from 'axios';\nimport { Item, Icon, Button } from \"semantic-ui-react\";\n\nimport Autolinker from 'autolinker';\n\n\nfunction Post(props) {\n    const id= props.id;\n    const token =props.token;\n    const tweets=props.tweet;\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    var autolinker = new Autolinker({ newWindow: false, truncate: 25 });\nconsole.log(props);\n\n    useEffect (()=>{\n        if(props.tabName===\"home\"){\n            dispatch(getAllPosts());\n\n        }else if(props.tabName===\"profile\"){\n            console.log(id)\n            dispatch(getPosts(id));\n        }  \n        \n        ;\n    },[id,,dispatch]);\n    \n// let posts;\n     let posts = useSelector((state) => state.handlePost.postData) || []\n\n    const dbInfo = useSelector((state) => state) || []\n    // if(props.tabName===\"home\" || props.tabName===\"profile\"){\n    //     posts= dbInfo.handlePost.postData;\n    // }else if(props.tabName===\"bookmarks\"){\n    //     posts=dbInfo.bookmarks.bookmarks\n    // }\n \n    // console.log(posts, props.tabName);\n    // console.log(dbPost,dbInfo);\n    \n    return (\n\n    // <></>\n    <>\n      {posts.length!==0?(\n          <>\n            {posts.map((post)=>{\n                return(\n\n                <div className=\"post\">\n                   <div className=\"post__avatar\">\n                        <Avatar src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\n                    </div> \n                    <div className=\"post__body\">\n                        <div className=\"post__header\">\n                            <div className=\"post__headerText\">\n                                <h3>\n\n                                    {post.author.name}\n                                    <span className=\"post_headerSpecial\">\n                                        <VerifiedUserIcon className=\"post_badge\" /> @{post.author.email}\n                                    </span>\n                                </h3>\n\n                            </div>\n\n                            <div className=\"post__headerDescription\">\n                                <p>\n                                    {autolinker.link( post.article)}\n                                    \n                                   {/* {post.article} */}\n                                        <a href=\"http://google.com\">google.com</a>\n                                </p>\n\n                            </div>\n\n                            {/* <img src=\"https://images.unsplash.com/photo-1518965493882-35b838ace024?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8Z2lmfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60s\" alt=\"\"/> */}\n\n                            <div className=\"post__footer\">\n                                <ChatBubbleOutlineIcon fontSize=\"small\"/>\n\n                                    {post.author._id === id ? <Button\n                                        onClick={(e) => {\n                                            dispatch(deletePost(post._id, token));\n                                            history.push(`/${props.tabName}`)\n                                        }}\n                                    >\n                                        <DeleteOutlineIcon fontSize=\"small\" style={{ color: \"black\" }}/> Delete\n                      </Button> : \n                        <Button disabled=\"true\"\n                                        onClick={(e) => {\n                                            dispatch(deletePost(post._id, token));\n                                            history.push(`/${props.tabName}`)\n                                        }}\n                                    >\n                                        <DeleteOutlineIcon fontSize=\"small\" style={{ color: \"black\" }} /> Delete\n                      </Button>}\n                                    \n                                \n                                {/* <FavoriteBorderIcon fontSize=\"small\"/>{props.post.likes.length} */}\n                                <Button\n                                    onClick={(e) => {\n                                        dispatch(likePost(post._id, token));\n                                        // history.push(`/${props.tabName}`) \n                                        // window.location.reload(false); \n                                    \n                                    }}\n                                >\n                                        <FavoriteBorderIcon fontSize=\"small\" style={{ color: \"red\" }} /> Likes:  {post.likes.length}\n                            </Button>\n\n                                {/* {post.likes.length} */}\n                                {/* {props.tabName !== \"bookmarks\" ? <Button\n                                        onClick={(e) => {\n                                            dispatch(addBookmark(id, post, token));\n                                        }}\n                                    >\n                                        <BookmarkBorderIcon fontSize=\"small\" style={{ color: \"blue\" }} /> Bookmark\n                                 </Button> \n                                 :\n\n                                 <Button\n                                        onClick={(e) => {\n                                            dispatch(removeBookmark(id, post, token));\n                                            }}\n                                    >\n                                        <BookmarkBorderIcon fontSize=\"small\" /> Unbookmark\n                                 </Button> \n                                 } */}\n\n                                    <Button\n                                        onClick={(e) => {\n                                            dispatch(addBookmark(id, post, token));\n                                        }}\n                                    >\n                                        <BookmarkBorderIcon fontSize=\"small\" style={{ color: \"blue\" }} /> Bookmark\n                                 </Button>\n                              \n                             \n\n                            </div>\n                        </div>\n\n\n                    </div>\n\n                </div>\n                );\n            })}\n\n          </>\n      ):\n      <>\n      {/* <h1>NO POST FOUND</h1> */}\n      <></>\n\n      </>\n      \n      \n      }\n     </>\n    \n    \n    );\n\n\n\n\n\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}