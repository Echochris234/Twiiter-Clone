{"ast":null,"code":"var _jsxFileName = \"/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/feed/Follow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFollower, getFollowing } from \"../../_actions/followers\";\nimport { Card, Icon, Button } from \"semantic-ui-react\";\nimport { checkFollowing, followUser, unfollowUser } from \"../../_actions/followers.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Follow(props) {\n  _s();\n\n  const id = props.id;\n  const token = JSON.parse(localStorage.getItem(\"userInfo\")).token;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getFollower(id));\n    dispatch(getFollowing(id));\n    if (id !== JSON.parse(localStorage.getItem(\"userInfo\")).result._id) dispatch(checkFollowing(JSON.parse(localStorage.getItem(\"userInfo\")).result._id, id, token));\n  }, []);\n  const followCount = useSelector(state => state.getFollow);\n  let following = useSelector(state => state.following.following);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), followCount.Followers, \" Followers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), followCount.Following, \" Following\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), id !== JSON.parse(localStorage.getItem(\"userInfo\")).result._id && /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: !following ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            dispatch(followUser(JSON.parse(localStorage.getItem(\"userInfo\")).result._id, id, token));\n          },\n          children: \"Follow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            dispatch(unfollowUser(JSON.parse(localStorage.getItem(\"userInfo\")).result._id, id, token));\n          },\n          children: \"Unfollow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Follow, \"9VcpwRAN1gYrJr5OlUKIxmOxoF4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Follow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Follow\");","map":{"version":3,"sources":["/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/feed/Follow.js"],"names":["React","useEffect","useDispatch","useSelector","getFollower","getFollowing","Card","Icon","Button","checkFollowing","followUser","unfollowUser","Follow","props","id","token","JSON","parse","localStorage","getItem","dispatch","result","_id","followCount","state","getFollow","following","Followers","Following"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFollower, getFollowing } from \"../../_actions/followers\";\nimport { Card, Icon, Button } from \"semantic-ui-react\";\nimport {\n    checkFollowing,\n    followUser,\n    unfollowUser,\n} from \"../../_actions/followers.js\";\n\nfunction Follow(props) {\n    const id = props.id;\n    const token = JSON.parse(localStorage.getItem(\"userInfo\")).token;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getFollower(id));\n        dispatch(getFollowing(id));\n        if (id !== JSON.parse(localStorage.getItem(\"userInfo\")).result._id)\n            dispatch(\n                checkFollowing(\n                    JSON.parse(localStorage.getItem(\"userInfo\")).result._id,\n                    id,\n                    token\n                )\n            );\n    }, []);\n    const followCount = useSelector((state) => state.getFollow);\n    let following = useSelector((state) => state.following.following);\n    return (\n        <div>\n            <Card>\n                <Card.Content extra>\n                    <Icon name=\"user\" />\n                    {followCount.Followers} Followers\n        </Card.Content>\n                <Card.Content extra>\n                    <Icon name=\"user\" />\n                    {followCount.Following} Following\n        </Card.Content>\n                {id !== JSON.parse(localStorage.getItem(\"userInfo\")).result._id && (\n                    <Card.Content extra>\n                        {!following ? (\n                            <Button\n                                onClick={() => {\n                                    dispatch(\n                                        followUser(\n                                            JSON.parse(localStorage.getItem(\"userInfo\")).result._id,\n                                            id,\n                                            token\n                                        )\n                                    );\n                                }}\n                            >\n                                Follow\n                            </Button>\n                        ) : (\n                            <Button\n                                onClick={() => {\n                                    dispatch(\n                                        unfollowUser(\n                                            JSON.parse(localStorage.getItem(\"userInfo\")).result._id,\n                                            id,\n                                            token\n                                        )\n                                    );\n                                }}\n                            >\n                                Unfollow\n                            </Button>\n                        )}\n                    </Card.Content>\n                )}\n            </Card>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}