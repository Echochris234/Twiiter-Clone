{"ast":null,"code":"const getPosts = (initData = {\n  postsData: []\n}, action) => {\n  switch (action.type) {\n    case \"GET_POSTS\":\n      // localStorage.setItem(\"userPosts\", JSON.stringify(action.payload.data));\n      return {\n        postData: action.payload.data\n      };\n\n    case \"CREATE_POST\":\n      const newPostList = [];\n      console.log(action.payload.data);\n      newPostList.push(action.payload.data);\n\n      for (let i = 0; i < initData.postData.length; i++) {\n        newPostList.push(initData.postData[i]);\n      } // localStorage.setItem(\"userPosts\", initData + JSON.stringify(action.payload.data))\n\n\n      return {\n        postsData: newPostList\n      };\n\n    case \"GET_ALL_POSTS\":\n      // localStorage.setItem(\"posts\", JSON.stringify(action.payload.data));\n      return {\n        postData: action.payload.data\n      };\n\n    case \"LIKE_POST\":\n      const mapNewLikes = [];\n\n      for (let i = 0; i < initData.postData.length; i++) {\n        if (action.payload.data._id !== initData.postData[i]._id) {\n          mapNewLikes.push(initData.postData[i]);\n        } else {\n          mapNewLikes.push(action.payload.data);\n        }\n      }\n\n      return {\n        postData: mapNewLikes\n      };\n\n    case \"DELETE_POST\":\n      return {\n        initData\n      };\n\n    default:\n      return initData;\n  }\n};\n\nexport default getPosts;","map":{"version":3,"sources":["/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_reducers/handlePost.js"],"names":["getPosts","initData","postsData","action","type","postData","payload","data","newPostList","console","log","push","i","length","mapNewLikes","_id"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,CAACC,QAAQ,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAZ,EAA+BC,MAA/B,KAA0C;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI;AACA,aAAO;AAACC,QAAAA,QAAQ,EAACF,MAAM,CAACG,OAAP,CAAeC;AAAzB,OAAP;;AACJ,SAAK,aAAL;AACI,YAAMC,WAAW,GAAE,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACG,OAAP,CAAeC,IAA3B;AACAC,MAAAA,WAAW,CAACG,IAAZ,CAAiBR,MAAM,CAACG,OAAP,CAAeC,IAAhC;;AACA,WAAI,IAAIK,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGX,QAAQ,CAACI,QAAT,CAAkBQ,MAAnC,EAA0CD,CAAC,EAA3C,EAA8C;AAC1CJ,QAAAA,WAAW,CAACG,IAAZ,CAAiBV,QAAQ,CAACI,QAAT,CAAkBO,CAAlB,CAAjB;AACH,OANL,CAOI;;;AACA,aAAO;AACJV,QAAAA,SAAS,EAAEM;AADP,OAAP;;AAMJ,SAAK,eAAL;AAEI;AACA,aAAO;AAACH,QAAAA,QAAQ,EAACF,MAAM,CAACG,OAAP,CAAeC;AAAzB,OAAP;;AAGA,SAAK,WAAL;AACA,YAAMO,WAAW,GAAG,EAApB;;AAEA,WAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,QAAQ,CAACI,QAAT,CAAkBQ,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAE/C,YAAIT,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBQ,GAApB,KAA4Bd,QAAQ,CAACI,QAAT,CAAkBO,CAAlB,EAAqBG,GAArD,EAA0D;AACtDD,UAAAA,WAAW,CAACH,IAAZ,CAAiBV,QAAQ,CAACI,QAAT,CAAkBO,CAAlB,CAAjB;AACH,SAFD,MAEO;AACHE,UAAAA,WAAW,CAACH,IAAZ,CAAiBR,MAAM,CAACG,OAAP,CAAeC,IAAhC;AACH;AACJ;;AACD,aAAO;AAAEF,QAAAA,QAAQ,EAAES;AAAZ,OAAP;;AAEJ,SAAK,aAAL;AACI,aAAO;AAAEb,QAAAA;AAAF,OAAP;;AACJ;AACI,aAAOA,QAAP;AAxCR;AA0CH,CA3CD;;AA6CA,eAAeD,QAAf","sourcesContent":["const getPosts = (initData = { postsData: [] }, action) => {\n    switch (action.type) {\n        case \"GET_POSTS\":\n            // localStorage.setItem(\"userPosts\", JSON.stringify(action.payload.data));\n            return {postData:action.payload.data};\n        case \"CREATE_POST\":\n            const newPostList =[];\n            console.log(action.payload.data);\n            newPostList.push(action.payload.data);\n            for(let i=0; i < initData.postData.length;i++){\n                newPostList.push(initData.postData[i]);\n            }\n            // localStorage.setItem(\"userPosts\", initData + JSON.stringify(action.payload.data))\n            return {\n               postsData: newPostList\n                \n            };\n            \n\n        case \"GET_ALL_POSTS\":\n            \n            // localStorage.setItem(\"posts\", JSON.stringify(action.payload.data));\n            return {postData:action.payload.data};\n    \n\n            case \"LIKE_POST\":\n            const mapNewLikes = [];\n            \n            for (let i = 0; i < initData.postData.length; i++) {\n               \n                if (action.payload.data._id !== initData.postData[i]._id) {\n                    mapNewLikes.push(initData.postData[i]);\n                } else {\n                    mapNewLikes.push(action.payload.data);\n                }\n            }\n            return { postData: mapNewLikes };\n\n        case \"DELETE_POST\":\n            return { initData };\n        default:\n            return initData;\n    }\n};\n\nexport default getPosts;"]},"metadata":{},"sourceType":"module"}