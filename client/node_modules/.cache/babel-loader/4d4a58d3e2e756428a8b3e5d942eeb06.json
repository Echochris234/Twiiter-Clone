{"ast":null,"code":"var _jsxFileName = \"/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/feed/Commentbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, Button, TextArea } from \"semantic-ui-react\";\nimport { getComments, comment } from \"./../../_actions/getComments\";\nimport './Tweetbox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Commentbox(props) {\n  _s();\n\n  console.log(props);\n  const dispatch = useDispatch();\n  const id = props.id;\n  const postId = props.postId;\n  const token = props.token;\n  const [userPost, updateUser] = useState({\n    author: id,\n    postId: postId,\n    comment: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweetBox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweetBox__input\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => {\n          dispatch(comment(token, userPost)).then(() => {\n            dispatch(getComments(postId));\n            updateUser({ ...userPost,\n              comment: \"\"\n            }); // history.push(`/${props.tabName}`)\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextArea, {\n          style: {\n            height: 50,\n            width: 350\n          },\n          type: \"text\",\n          value: userPost.comment,\n          placeholder: \"Create a new Post!\",\n          onChange: e => {\n            updateUser({ ...userPost,\n              comment: e.target.value\n            });\n            console.log(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Commentbox, \"nYLJeMxhYsJUXafzp30TAllxBbQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Commentbox;\nexport default Commentbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commentbox\");","map":{"version":3,"sources":["/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/feed/Commentbox.js"],"names":["React","useState","useDispatch","Form","Button","TextArea","getComments","comment","Commentbox","props","console","log","dispatch","id","postId","token","userPost","updateUser","author","e","then","height","width","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,QAAvB,QAAuC,mBAAvC;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,8BAArC;AACA,OAAO,gBAAP;;;AAIA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACI,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,EAAE,GAAGJ,KAAK,CAACI,EAAjB;AACA,QAAMC,MAAM,GAACL,KAAK,CAACK,MAAnB;AACA,QAAMC,KAAK,GAAGN,KAAK,CAACM,KAApB;AACA,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBhB,QAAQ,CAAC;AAAEiB,IAAAA,MAAM,EAAEL,EAAV;AAAcC,IAAAA,MAAM,EAAEA,MAAtB;AAA8BP,IAAAA,OAAO,EAAE;AAAvC,GAAD,CAAvC;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BAGI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BAEI,QAAC,IAAD;AACI,QAAA,QAAQ,EAAGY,CAAD,IAAO;AAEbP,UAAAA,QAAQ,CAACL,OAAO,CAACQ,KAAD,EAAQC,QAAR,CAAR,CAAR,CAAmCI,IAAnC,CAAwC,MAAM;AAC1CR,YAAAA,QAAQ,CAACN,WAAW,CAACQ,MAAD,CAAZ,CAAR;AACAG,YAAAA,UAAU,CAAC,EAAE,GAAGD,QAAL;AAAgBT,cAAAA,OAAO,EAAE;AAAzB,aAAD,CAAV,CAF0C,CAG1C;AACH,WAJD;AAKH,SARL;AAAA,gCAUI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAAEc,YAAAA,MAAM,EAAE,EAAV;AAAcC,YAAAA,KAAK,EAAE;AAArB,WAAjB;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAEN,QAAQ,CAACT,OAFpB;AAGI,UAAA,WAAW,EAAC,oBAHhB;AAII,UAAA,QAAQ,EAAGY,CAAD,IAAO;AACbF,YAAAA,UAAU,CAAC,EAAE,GAAGD,QAAL;AAAeT,cAAAA,OAAO,EAAEY,CAAC,CAACI,MAAF,CAASC;AAAjC,aAAD,CAAV;AACAd,YAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAC,CAACI,MAAF,CAASC,KAArB;AACH;AAPL;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAmBI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GAzCQhB,U;UAEYN,W;;;KAFZM,U;AA2CT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, Button, TextArea } from \"semantic-ui-react\";\nimport { getComments, comment } from \"./../../_actions/getComments\";\nimport './Tweetbox.css'\n\n\n\nfunction Commentbox(props) {\nconsole.log(props)\n    const dispatch = useDispatch();\n    const id = props.id;\n    const postId=props.postId\n    const token = props.token;\n    const [userPost, updateUser] = useState({ author: id, postId: postId, comment: \"\" });\n\n\n    return (\n        <div className=\"tweetBox\">\n\n\n            <div className=\"tweetBox__input\">\n\n                <Form\n                    onSubmit={(e) => {\n\n                        dispatch(comment(token, userPost)).then(() => {\n                            dispatch(getComments(postId))\n                            updateUser({ ...userPost,  comment: \"\" });\n                            // history.push(`/${props.tabName}`)\n                        });\n                    }}\n                >\n                    <TextArea style={{ height: 50, width: 350 }}\n                        type=\"text\"\n                        value={userPost.comment}\n                        placeholder=\"Create a new Post!\"\n                        onChange={(e) => {\n                            updateUser({ ...userPost, comment: e.target.value });\n                            console.log(e.target.value)\n                        }}\n                    ></TextArea>\n                    <Button>Create Post</Button>\n                </Form>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Commentbox\n"]},"metadata":{},"sourceType":"module"}