{"ast":null,"code":"var _jsxFileName = \"/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/post/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { getPosts, deletePost, likePost, getAllPosts } from \"./../../_actions/getPosts\";\nimport { addBookmark } from \"./../../_actions/bookmarks\";\nimport { getComments, comment } from \"./../../_actions/getComments\";\nimport Comments from \"./Comments.js\";\nimport { Link } from \"react-router-dom\";\nimport './Post.css';\nimport { Avatar } from \"@material-ui/core\";\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport { Button, Comment } from \"semantic-ui-react\";\nimport ReactHtmlParser from 'react-html-parser';\nimport Autolinker from 'autolinker';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Post(props) {\n  _s();\n\n  console.log(props);\n  const id = props.id;\n  const token = props.token;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let userData = localStorage.getItem(\"userInfo\");\n\n  const currId = JSON.parse(userData).result._id;\n\n  var autolinker = new Autolinker({\n    urls: {\n      schemeMatches: true,\n      wwwMatches: true,\n      tldMatches: true\n    },\n    email: true,\n    phone: true,\n    stripPrefix: true,\n    stripTrailingSlash: true,\n    newWindow: true,\n    truncate: {\n      length: 0,\n      location: 'end'\n    },\n    className: ''\n  });\n  useEffect(() => {\n    if (props.tabName === \"home\") {\n      dispatch(getAllPosts());\n    } else if (props.tabName === \"profile\") {\n      dispatch(getPosts(id));\n    }\n\n    ;\n  }, [id, dispatch]);\n  let Data = useSelector(state => state);\n  let posts = useSelector(state => state.handlePost.postData) || [];\n  console.log(Data); // console.log(Data);\n\n  let linkPost;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: posts.map(post => {\n        linkPost = autolinker.link(post.article);\n        console.log(post);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__avatar\",\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: \"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post__headerText\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    style: {\n                      textDecoration: 'none',\n                      color: '#50b7f5'\n                    },\n                    to: {\n                      pathname: `/profile/${post.author.name}`,\n                      state: {\n                        name: post.author.name,\n                        id: post.author._id,\n                        token: token\n                      }\n                    },\n                    children: post.author.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"post_headerSpecial\",\n                    children: [/*#__PURE__*/_jsxDEV(VerifiedUserIcon, {\n                      className: \"post_badge\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 41\n                    }, this), \" @\", post.author.email]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post__headerDescription\",\n                id: \"articles\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: ReactHtmlParser(linkPost)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Comment.Group, {\n                  children: Data.handleComment.postComments.map(comment => {\n                    if (comment.postId === post._id) {\n                      return /*#__PURE__*/_jsxDEV(Comment, {\n                        children: [/*#__PURE__*/_jsxDEV(Comment.Content, {\n                          children: [/*#__PURE__*/_jsxDEV(Comment.Author, {\n                            as: \"a\",\n                            children: \"Matt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 149,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Comment.Text, {\n                            children: comment.comment\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 150,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 148,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 152,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 146,\n                        columnNumber: 49\n                      }, this); // console.log(comment)\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post__footer\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: e => {\n                    dispatch(getComments(post._id));\n                    return /*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \" Comments\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 51\n                    }, this); // console.log(Data.handleComment.postComments)\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ChatBubbleOutlineIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 41\n                  }, this), \"Comments: \", post.comments.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 35\n                }, this), post.author._id === currId ? /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: e => {\n                    dispatch(deletePost(post._id, token));\n                    history.push(`/${props.tabName}`);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {\n                    fontSize: \"small\",\n                    style: {\n                      color: \"black\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 41\n                  }, this), \" Delete\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 67\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: \"true\",\n                  onClick: e => {\n                    dispatch(deletePost(post._id, token));\n                    history.push(`/${props.tabName}`);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {\n                    fontSize: \"small\",\n                    style: {\n                      color: \"black\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 41\n                  }, this), \" Delete\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: e => {\n                    dispatch(likePost(post._id, token));\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {\n                    fontSize: \"small\",\n                    style: {\n                      color: \"red\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 41\n                  }, this), \" Likes:  \", post.likes.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: e => {\n                    dispatch(addBookmark(id, post, token));\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(BookmarkBorderIcon, {\n                    fontSize: \"small\",\n                    style: {\n                      color: \"blue\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 41\n                  }, this), \" Bookmark\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false)\n  }, void 0, false);\n}\n\n_s(Post, \"Ac+ynCku0sjYvFMmJ0HnzhY+qvY=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/post/Post.js"],"names":["React","useEffect","useDispatch","useSelector","useHistory","getPosts","deletePost","likePost","getAllPosts","addBookmark","getComments","comment","Comments","Link","Avatar","VerifiedUserIcon","ChatBubbleOutlineIcon","FavoriteBorderIcon","DeleteOutlineIcon","BookmarkBorderIcon","Button","Comment","ReactHtmlParser","Autolinker","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Post","props","console","log","id","token","dispatch","history","userData","localStorage","getItem","currId","JSON","parse","result","_id","autolinker","urls","schemeMatches","wwwMatches","tldMatches","email","phone","stripPrefix","stripTrailingSlash","newWindow","truncate","length","location","className","tabName","Data","state","posts","handlePost","postData","linkPost","map","post","link","article","textDecoration","color","pathname","author","name","handleComment","postComments","postId","e","comments","push","likes"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { getPosts, deletePost, likePost, getAllPosts } from \"./../../_actions/getPosts\";\nimport {addBookmark} from \"./../../_actions/bookmarks\";\nimport { getComments,comment } from \"./../../_actions/getComments\";\nimport Comments from \"./Comments.js\";\nimport { Link } from \"react-router-dom\";\nimport './Post.css'\nimport { Avatar} from \"@material-ui/core\"\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\n\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\n\nimport { Button,Comment } from \"semantic-ui-react\";\nimport ReactHtmlParser from 'react-html-parser';\nimport Autolinker from 'autolinker';\n\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction Post(props) {\nconsole.log(props)\n\n\n    const id= props.id;\n    const token =props.token;\n    \n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    let userData = localStorage.getItem(\"userInfo\");\n    const currId = JSON.parse(userData).result._id;\n    \n    var autolinker = new Autolinker({\n        urls: {\n            schemeMatches: true,\n            wwwMatches: true,\n            tldMatches: true\n        },\n        email: true,\n        phone: true,\n       \n\n        stripPrefix: true,\n        stripTrailingSlash: true,\n        newWindow: true,\n\n        truncate: {\n            length: 0,\n            location: 'end'\n        },\n\n        className: ''\n    });\n\n\n\n    useEffect (()=>{\n        if(props.tabName===\"home\"){\n            dispatch(getAllPosts());\n            \n        }else if(props.tabName===\"profile\"){\n           \n            dispatch(getPosts(id));\n            \n        }  \n        \n        ;\n    },[id,dispatch]);\n    \n    let Data = useSelector((state) => state);\n     let posts = useSelector((state) => state.handlePost.postData) || []\nconsole.log(Data);\n    \n// console.log(Data);\n    let linkPost;\n\n    return (\n\n    <>\n      {posts.length!==0?(\n          <>\n            {posts.map((post)=>{\n                linkPost=autolinker.link(post.article);\n                console.log(post)\n\n                return(\n\n                <div className=\"post\">\n                   <div className=\"post__avatar\">\n                        <Avatar src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\n                    </div> \n                    <div className=\"post__body\">\n                        <div className=\"post__header\">\n                             \n                            <div className=\"post__headerText\">\n                                <h3>\n\n                                        <Link style={{ textDecoration: 'none', color:'#50b7f5'}}\n                                            \n                                            to={{\n                                                pathname: `/profile/${post.author.name}`,\n                                                state: {\n                                                    name: post.author.name,\n                                                    id: post.author._id,\n                                                    token: token,\n                                                },\n                                            }}\n                                        >\n                                            {post.author.name}\n                                        </Link>\n                                    <span className=\"post_headerSpecial\">\n                                        <VerifiedUserIcon className=\"post_badge\" /> @{post.author.email}\n                                    </span>\n                                </h3>\n\n                            </div>\n\n                                <div className=\"post__headerDescription\" id=\"articles\" >\n                                <p>\n          \n                                        {ReactHtmlParser(linkPost) }\n                                        \n                                </p>\n                                      \n                            </div>\n                    \n                                \n                                <>\n                                \n                                <Comment.Group>\n                                    {Data.handleComment.postComments.map((comment => {\n                                        if (comment.postId === post._id) {\n                                            return (\n\n                                                <Comment>\n\n                                                    <Comment.Content>\n                                                        <Comment.Author as='a'>Matt</Comment.Author>\n                                                        <Comment.Text>{comment.comment}</Comment.Text>\n                                                    </Comment.Content>\n                                                    <br></br>\n                                                </Comment>\n                                                \n\n\n                                     \n\n                                            );\n                                            // console.log(comment)\n                                        }\n                                    }))\n                                    }\n                                    \n                                </Comment.Group></>\n\n                            <div className=\"post__footer\">\n                                \n                                    {/* <Button onClick={(e) => {\n                                        <Comments postId={post._id} id={id} token={token} />\n                                        dispatch(getComments(post._id)).then((comment)=>{\n                                            \n                                        })\n                                    {console.log(\"Hello\")}\n                                        <Comments postId={post._id} id={id} token={token} />\n                                     }}\n                                    >\n                                        <ChatBubbleOutlineIcon fontSize=\"small\" />Comments: \n                                        <ChatBubbleOutlineIcon fontSize=\"small\" />Comments: {post.comments.length}\n                                </Button>\n                                */}\n                                \n                                    {/* <Comments postId={post._id} id={id} token={token}/> */}\n                                  <Button onClick={((e)=>{\n                                      dispatch(getComments(post._id))\n\n                                           return <h3> Comments</h3>\n                                        \n                                        \n                                        // console.log(Data.handleComment.postComments)\n                                  })}>\n\n                                    \n                                    \n                                      \n                                        \n                                        <ChatBubbleOutlineIcon fontSize=\"small\" />Comments: {post.comments.length}\n                                  </Button>\n                                    \n\n                                    {post.author._id === currId ? <Button\n                                        onClick={(e) => {\n                                            dispatch(deletePost(post._id, token));\n                                            history.push(`/${props.tabName}`)\n                                        }}\n                                    >\n                                        <DeleteOutlineIcon fontSize=\"small\" style={{ color: \"black\" }}/> Delete\n                                </Button> : \n                        <Button disabled=\"true\"\n                                        onClick={(e) => {\n                                            dispatch(deletePost(post._id, token));\n                                            history.push(`/${props.tabName}`)\n                                        }}\n                                    >\n                                        <DeleteOutlineIcon fontSize=\"small\" style={{ color: \"black\" }} /> Delete\n                      </Button>}\n                                    \n                                \n                                \n                                <Button\n                                    onClick={(e) => {\n                                        dispatch(likePost(post._id, token));\n                                      \n                                    \n                                    }}\n                                >\n                                        <FavoriteBorderIcon fontSize=\"small\" style={{ color: \"red\" }} /> Likes:  {post.likes.length}\n                            </Button>\n\n                              \n\n                                    <Button\n                                        onClick={(e) => {\n                                            dispatch(addBookmark(id, post, token));\n                                        }}\n                                    >\n                                        <BookmarkBorderIcon fontSize=\"small\" style={{ color: \"blue\" }} /> Bookmark\n                                 </Button>\n                              \n                             \n\n                            </div>\n                        </div>\n\n\n                    </div>\n\n                </div>\n                );\n            })}\n    \n          </>\n          \n      ):\n      <>\n      \n      <></>\n\n      </>\n      \n      \n      }\n     </>\n    \n    \n    );\n\n   \n\n\n\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}