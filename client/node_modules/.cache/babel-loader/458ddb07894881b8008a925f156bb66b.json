{"ast":null,"code":"const bookmarks = (initData = {\n  bookmarks: []\n}, action) => {\n  switch (action.type) {\n    case \"GET_BOOKMARKS\":\n      localStorage.setItem(\"bookmarks\", JSON.stringify(action.payload));\n      return {\n        bookmarks: action.payload\n      };\n\n    case \"ADD_BOOKMARK\":\n      localStorage.setItem(\"bookmarks\", action.payload);\n      return {\n        bookmarks: action.payload\n      };\n\n    case \"DELETE_BOOKMARK\":\n      const mapNewBookmarks = [];\n\n      for (let i = 0; i < initData.bookmarks.length; i++) {\n        if (initData.bookmarks[i]._id !== action.payload.data._id) {\n          mapNewBookmarks.push(initData.bookmarks[i]);\n        }\n      }\n\n      return {\n        bookmarks: mapNewBookmarks\n      };\n\n    default:\n      return initData;\n  }\n};\n\nexport default bookmarks;","map":{"version":3,"sources":["/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_reducers/bookmarks.js"],"names":["bookmarks","initData","action","type","localStorage","setItem","JSON","stringify","payload","mapNewBookmarks","i","length","_id","data","push"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAACC,QAAQ,GAAG;AAAED,EAAAA,SAAS,EAAE;AAAb,CAAZ,EAA+BE,MAA/B,KAA0C;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACIC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeL,MAAM,CAACM,OAAtB,CAAlC;AACA,aAAO;AAAER,QAAAA,SAAS,EAAEE,MAAM,CAACM;AAApB,OAAP;;AACJ,SAAK,cAAL;AACIJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,MAAM,CAACM,OAAzC;AACA,aAAO;AAAER,QAAAA,SAAS,EAAEE,MAAM,CAACM;AAApB,OAAP;;AACJ,SAAK,iBAAL;AACI,YAAMC,eAAe,GAAG,EAAxB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,QAAQ,CAACD,SAAT,CAAmBW,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAChD,YAAIT,QAAQ,CAACD,SAAT,CAAmBU,CAAnB,EAAsBE,GAAtB,KAA8BV,MAAM,CAACM,OAAP,CAAeK,IAAf,CAAoBD,GAAtD,EAA2D;AACvDH,UAAAA,eAAe,CAACK,IAAhB,CAAqBb,QAAQ,CAACD,SAAT,CAAmBU,CAAnB,CAArB;AACH;AACJ;;AACD,aAAO;AAAEV,QAAAA,SAAS,EAAES;AAAb,OAAP;;AACJ;AACI,aAAOR,QAAP;AAhBR;AAkBH,CAnBD;;AAqBA,eAAeD,SAAf","sourcesContent":["const bookmarks = (initData = { bookmarks: [] }, action) => {\n    switch (action.type) {\n        case \"GET_BOOKMARKS\":\n            localStorage.setItem(\"bookmarks\", JSON.stringify(action.payload));\n            return { bookmarks: action.payload };\n        case \"ADD_BOOKMARK\":\n            localStorage.setItem(\"bookmarks\", action.payload);\n            return { bookmarks: action.payload };\n        case \"DELETE_BOOKMARK\":\n            const mapNewBookmarks = [];\n            for (let i = 0; i < initData.bookmarks.length; i++) {\n                if (initData.bookmarks[i]._id !== action.payload.data._id) {\n                    mapNewBookmarks.push(initData.bookmarks[i]);\n                }\n            }\n            return { bookmarks: mapNewBookmarks };\n        default:\n            return initData;\n    }\n};\n\nexport default bookmarks;"]},"metadata":{},"sourceType":"module"}