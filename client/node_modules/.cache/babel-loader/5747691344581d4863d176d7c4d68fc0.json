{"ast":null,"code":"var _jsxFileName = \"/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/feed/Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts, deletePost, likePost, getAllPosts } from \"./../../_actions/getPosts\"; // import { useHistory } from \"react-router-dom\";\n// import { useDispatch } from \"react-redux\";\n// import { Button, Segment } from \"semantic-ui-react\";\n// import { Link } from \"react-router-dom\";\n// import { getPosts, deletePost, likePost } from \"../../_actions/getPosts\";\n// import { Item, Icon } from \"semantic-ui-react\";\n\nimport TweetBox from './Tweetbox.js';\nimport './Feed.css';\nimport Post from '../post/Post.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nfunction Feed(props) {\n  _s();\n\n  console.log(props);\n  const dispatch = useDispatch();\n  const [post, setPost] = useState([]);\n  useEffect(() => {\n    dispatch(getAllPosts());\n  }, [localStorage.getItem(\"posts\"), dispatch]);\n  const posts = useSelector(state => state.handlePost) || [];\n  console.log(posts); //    useEffect(()=>{\n  //            axios.get(`http://localhost:8000/posts/`)\n  //                .then(res => {\n  //                    const postData = res.data;\n  //                    setPost(postData);\n  //                })\n  //    }, [])\n\n  if (posts.length !== 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.tabName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TweetBox, {\n        id: props.id,\n        token: props.token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), posts.map(tweet => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: tweet,\n          id: props.id,\n          token: props.token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.tabName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TweetBox, {\n        id: props.id,\n        token: props.token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"This user has no posts!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(Feed, \"XxmIBiFTizhxuSgXxhNnT4KmNdc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/feed/Feed.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getPosts","deletePost","likePost","getAllPosts","TweetBox","Post","axios","require","Feed","props","console","log","dispatch","post","setPost","localStorage","getItem","posts","state","handlePost","length","tabName","id","token","map","tweet"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,QAA/B,EAAwCC,WAAxC,QAA2D,2BAA3D,C,CACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEjBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,QAAQ,GAAGd,WAAW,EAA5B;AAED,QAAK,CAACe,IAAD,EAAMC,OAAN,IAAelB,QAAQ,CAAC,EAAD,CAA5B;AAECC,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AACH,GAFQ,EAEN,CAACY,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,EAAgCJ,QAAhC,CAFM,CAAT;AAIA,QAAMK,KAAK,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,UAAlB,CAAX,IAA4C,EAA1D;AAEAT,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ,EAbiB,CAerB;AAEA;AACA;AAEA;AAEA;AACA;AAEA;;AAMA,MAAGA,KAAK,CAACG,MAAN,KAAe,CAAlB,EAAoB;AAIZ,wBAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAA,oBAAKX,KAAK,CAACY;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEZ,KAAK,CAACa,EAApB;AAAwB,QAAA,KAAK,EAAEb,KAAK,CAACc;AAArC;AAAA;AAAA;AAAA;AAAA,cATJ,EAWKN,KAAK,CAACO,GAAN,CAAUC,KAAK,IAAE;AACd,4BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,KAAZ;AAAmB,UAAA,EAAE,EAAEhB,KAAK,CAACa,EAA7B;AAAiC,UAAA,KAAK,EAAEb,KAAK,CAACc;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAIH,OALA,CAXL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAuBH,GA3BL,MA6BI;AACQ,wBAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAA,oBAAKd,KAAK,CAACY;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEZ,KAAK,CAACa,EAApB;AAAwB,QAAA,KAAK,EAAEb,KAAK,CAACc;AAArC;AAAA;AAAA;AAAA;AAAA,cATJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAqBP;AAEJ;;GApFQf,I;UAGYV,W,EAQHC,W;;;KAXTS,I;AAuFT,eAAeA,IAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts, deletePost, likePost,getAllPosts } from \"./../../_actions/getPosts\";\n// import { useHistory } from \"react-router-dom\";\n// import { useDispatch } from \"react-redux\";\n// import { Button, Segment } from \"semantic-ui-react\";\n\n// import { Link } from \"react-router-dom\";\n// import { getPosts, deletePost, likePost } from \"../../_actions/getPosts\";\n// import { Item, Icon } from \"semantic-ui-react\";\n\nimport TweetBox from './Tweetbox.js'\nimport './Feed.css'\nimport Post from '../post/Post.js'\n\nconst axios = require('axios');\n\nfunction Feed(props) {\n    \n    console.log(props);\n    const dispatch = useDispatch();\n\n   const[post,setPost]=useState([]);\n  \n    useEffect(() => {\n        dispatch(getAllPosts());\n    }, [localStorage.getItem(\"posts\"), dispatch]);\n\n    const posts = useSelector((state) => state.handlePost) || [];\n    \n    console.log(posts);\n\n//    useEffect(()=>{\n       \n//            axios.get(`http://localhost:8000/posts/`)\n//                .then(res => {\n                   \n//                    const postData = res.data;\n                    \n//                    setPost(postData);\n//                })\n       \n//    }, [])\n\n\n\n   \n    \nif(posts.length!==0){\n\n\n\n        return (\n            \n            <div className=\"feed\">\n                {/* Header */}\n                <div className=\"feed__header\">\n                    <h2>{props.tabName}</h2>\n                </div>\n\n            \n            \n                {/* TweetBox */}\n                <TweetBox id={props.id} token={props.token}/>\n\n                {posts.map(tweet=>{\n                    return(\n                        <Post post={tweet} id={props.id} token={props.token}/>\n                        \n                    )\n                })}\n    \n            </div>\n            \n        )\n    }\n\nelse{\n            return(\n\n                <div className=\"feed\">\n                    {/* Header */}\n                    <div className=\"feed__header\">\n                        <h2>{props.tabName}</h2>\n                    </div>\n\n\n\n                    {/* TweetBox */}\n                    <TweetBox id={props.id} token={props.token} />\n\n                    <div>This user has no posts!</div>\n\n                </div>\n\n\n            )\n\n\n    }\n\n}\n\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}