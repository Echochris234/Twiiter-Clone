{"ast":null,"code":"var _jsxFileName = \"/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/post/BookmarkPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { likePost } from \"./../../_actions/getPosts\";\nimport { getBookmarks, removeBookmark } from \"./../../_actions/bookmarks\";\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport './Post.css';\nimport { Avatar } from \"@material-ui/core\";\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { Button } from \"semantic-ui-react\";\nimport ReactHtmlParser from 'react-html-parser';\nimport Autolinker from 'autolinker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BookmarkPost(props) {\n  _s();\n\n  const id = props.id;\n  const token = props.token;\n  const dispatch = useDispatch();\n  var autolinker = new Autolinker({\n    urls: {\n      schemeMatches: true,\n      wwwMatches: true,\n      tldMatches: true\n    },\n    email: true,\n    phone: true,\n    stripPrefix: true,\n    stripTrailingSlash: true,\n    newWindow: true,\n    truncate: {\n      length: 0,\n      location: 'end'\n    },\n    className: ''\n  });\n  console.log(props);\n  useEffect(() => {\n    dispatch(getBookmarks(id, token));\n  }, [id, token, dispatch]);\n  let posts = useSelector(state => state.bookmarks.bookmarks) || [];\n  let linkPost;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: posts.map(post => {\n        linkPost = autolinker.link(post.article);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__avatar\",\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: \"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post__headerText\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: {\n                      pathname: `/profile/`,\n                      state: {\n                        id: post.author._id,\n                        token: token\n                      }\n                    },\n                    children: post.author.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"post_headerSpecial\",\n                    children: [/*#__PURE__*/_jsxDEV(VerifiedUserIcon, {\n                      className: \"post_badge\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 53\n                    }, this), \" @\", post.author.email]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post__headerDescription\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: ReactHtmlParser(linkPost)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post__footer\",\n                children: [/*#__PURE__*/_jsxDEV(ChatBubbleOutlineIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: \"true\",\n                  onClick: e => {\n                    dispatch(likePost(post._id, token));\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {\n                    fontSize: \"small\",\n                    style: {\n                      color: \"red\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 49\n                  }, this), \" Likes:  \", post.likes.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: e => {\n                    dispatch(removeBookmark(id, post, token));\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(BookmarkBorderIcon, {\n                    fontSize: \"small\",\n                    style: {\n                      color: \"blue\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 49\n                  }, this), \" Unbookmark\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false)\n  }, void 0, false);\n}\n\n_s(BookmarkPost, \"7K48bEdCs9ExWEWnKCoZI8Lr3a4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = BookmarkPost;\nexport default BookmarkPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookmarkPost\");","map":{"version":3,"sources":["/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/post/BookmarkPost.js"],"names":["React","useEffect","useDispatch","useSelector","Link","likePost","getBookmarks","removeBookmark","BookmarkBorderIcon","Avatar","VerifiedUserIcon","ChatBubbleOutlineIcon","FavoriteBorderIcon","Button","ReactHtmlParser","Autolinker","BookmarkPost","props","id","token","dispatch","autolinker","urls","schemeMatches","wwwMatches","tldMatches","email","phone","stripPrefix","stripTrailingSlash","newWindow","truncate","length","location","className","console","log","posts","state","bookmarks","linkPost","map","post","link","article","pathname","author","_id","name","e","color","likes"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {  likePost} from \"./../../_actions/getPosts\";\nimport { getBookmarks,removeBookmark } from \"./../../_actions/bookmarks\";\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport './Post.css'\nimport { Avatar } from \"@material-ui/core\"\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\n\nimport {  Button } from \"semantic-ui-react\";\n\nimport ReactHtmlParser from 'react-html-parser';\nimport Autolinker from 'autolinker';\nfunction BookmarkPost(props) {\n    const id = props.id;\n    const token = props.token;\n\n    const dispatch = useDispatch();\n    \n\n    var autolinker = new Autolinker({\n        urls: {\n            schemeMatches: true,\n            wwwMatches: true,\n            tldMatches: true\n        },\n        email: true,\n        phone: true,\n\n        stripPrefix: true,\n        stripTrailingSlash: true,\n        newWindow: true,\n\n        truncate: {\n            length: 0,\n            location: 'end'\n        },\n\n        className: ''\n    });\n\n\n    console.log(props);\n\n    useEffect(() => {\n        \n        dispatch(getBookmarks(id, token));\n    }, [id, token, dispatch]);\n\n    \n    let posts = useSelector((state) => state.bookmarks.bookmarks) || []\n\n\n    \n    let linkPost;\n    return (\n\n        \n        <>\n            {posts.length !== 0 ? (\n                <>\n                    {posts.map((post) => {\n                        linkPost = autolinker.link(post.article);\n                        return (\n\n                            <div className=\"post\">\n                                <div className=\"post__avatar\">\n                                    <Avatar src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\n                                </div>\n                                <div className=\"post__body\">\n                                    <div className=\"post__header\">\n                                        <div className=\"post__headerText\">\n                                            <h3>\n\n\n                                                <Link\n                                                    to={{\n                                                        pathname: `/profile/`,\n                                                        state: {\n                                                            id: post.author._id,\n                                                            token: token,\n                                                        },\n                                                    }}\n                                                >\n                                                    {post.author.name}\n                                                </Link>\n                                                <span className=\"post_headerSpecial\">\n                                                    <VerifiedUserIcon className=\"post_badge\" /> @{post.author.email}\n                                                </span>\n                                            </h3>\n\n                                        </div>\n\n                                        <div className=\"post__headerDescription\">\n                                            <p>\n                                                {ReactHtmlParser(linkPost)}\n                                            </p>\n\n                                        </div>\n\n                                        \n\n                                        <div className=\"post__footer\">\n                                            <ChatBubbleOutlineIcon fontSize=\"small\" />\n\n                                            \n\n\n                                          \n                                            <Button disabled=\"true\"\n                                                onClick={(e) => {\n                                                    dispatch(likePost(post._id, token));\n                                                   \n                                                }}\n                                            >\n                                                <FavoriteBorderIcon fontSize=\"small\" style={{color:\"red\"}} /> Likes:  {post.likes.length}\n                                            </Button>\n\n                                          \n                                            <Button\n                                                onClick={(e) => {\n                                                    dispatch(removeBookmark(id, post, token));\n                                                }}\n                                            >\n                                                <BookmarkBorderIcon fontSize=\"small\" style={{ color: \"blue\" }} /> Unbookmark\n                                            </Button>\n\n\n\n                                        </div>\n                                    </div>\n\n\n                                </div>\n\n                            </div>\n                        );\n                    })}\n\n                </>\n            ) :\n                <>\n                    <></>\n\n                </>\n\n\n            }\n        </>\n\n\n    );\n\n\n\n\n\n}\n\nexport default BookmarkPost\n"]},"metadata":{},"sourceType":"module"}