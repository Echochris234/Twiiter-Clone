{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { getPosts, deletePost, likePost, getAllPosts } from \"./../../_actions/getPosts\";\nimport { addBookmark } from \"./../../_actions/bookmarks\";\nimport { getComments, comment } from \"./../../_actions/getComments\";\nimport { Link } from \"react-router-dom\";\nimport './Post.css';\nimport { Avatar } from \"@material-ui/core\";\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport { Button } from \"semantic-ui-react\";\nimport ReactHtmlParser from 'react-html-parser';\nimport Autolinker from 'autolinker';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comments(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const postId = props.postId;\n  const id = props.id;\n  const token = props.token;\n  console.log(postId);\n  useEffect(() => {\n    dispatch(getComments(postId));\n  }, [postId, dispatch]);\n  let comments = useSelector(state => state);\n  console.log(comments);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: console.log(\"Hello\")\n  }, void 0, false) //     <div>\n  //         <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n  //             <ChatBubbleOutlineIcon fontSize=\"small\" />Comments: {comments.length}\n  //   </Button>\n  //         <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  //             <DialogTitle id=\"form-dialog-title\">Please Type your comment below</DialogTitle>\n  //             <DialogContent>\n  //                 <DialogContentText>\n  //                     To subscribe to this website, please enter your email address here. We will send updates\n  //                     occasionally.\n  //       </DialogContentText>\n  //                 <TextField\n  //                     autoFocus\n  //                     margin=\"dense\"\n  //                     id=\"name\"\n  //                     label=\"Comment\"\n  //                     type=\"text\"\n  //                     fullWidth\n  //                 />\n  //             </DialogContent>\n  //             <DialogActions>\n  //                 <Button onClick={handleClose} color=\"primary\">\n  //                     Cancel\n  //       </Button>\n  //                 <Button onClick={(e) => {\n  //                     handleClose();\n  //                 }}\n  //                     color=\"primary\">\n  //                     Comment\n  //       </Button>\n  //             </DialogActions>\n  //         </Dialog>\n  //     </div>\n  ;\n}\n\n_s(Comments, \"hBEp9qvG+ojm9IgTWCBZOuV3838=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/post/Comments.js"],"names":["React","useEffect","useDispatch","useSelector","useHistory","getPosts","deletePost","likePost","getAllPosts","addBookmark","getComments","comment","Link","Avatar","VerifiedUserIcon","ChatBubbleOutlineIcon","FavoriteBorderIcon","DeleteOutlineIcon","BookmarkBorderIcon","Button","ReactHtmlParser","Autolinker","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Comments","props","dispatch","history","open","setOpen","useState","handleClickOpen","handleClose","postId","id","token","console","log","comments","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,QAA/B,EAAyCC,WAAzC,QAA4D,2BAA5D;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,8BAArC;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,YAAP;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AAEA,OAAOC,kBAAP,MAA+B,mCAA/B;AAEA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AAEA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAGA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAMC,QAAQ,GAAG5B,WAAW,EAA5B;AACA,QAAM6B,OAAO,GAAG3B,UAAU,EAA1B;AAEA,QAAM,CAAC4B,IAAD,EAAOC,OAAP,IAAkBjC,KAAK,CAACkC,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC1BF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AAEtBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAHD;;AAKA,QAAMI,MAAM,GAACR,KAAK,CAACQ,MAAnB;AACA,QAAMC,EAAE,GAAGT,KAAK,CAACS,EAAjB;AACA,QAAMC,KAAK,GAAGV,KAAK,CAACU,KAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAIApC,EAAAA,SAAS,CAAC,MAAM;AACZ6B,IAAAA,QAAQ,CAACpB,WAAW,CAAC2B,MAAD,CAAZ,CAAR;AACH,GAFQ,EAEN,CAACA,MAAD,EAAQP,QAAR,CAFM,CAAT;AAIA,MAAIY,QAAQ,GAAGvC,WAAW,CAAEwC,KAAD,IAAWA,KAAZ,CAA1B;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,sBACQ;AAAA,cACCF,OAAO,CAACC,GAAR,CAAY,OAAZ;AADD,mBADR,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCA;AA+CH;;GA5EQb,Q;UACY1B,W,EACDE,U,EAyBDD,W;;;KA3BVyB,Q;AA8ET,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { getPosts, deletePost, likePost, getAllPosts } from \"./../../_actions/getPosts\";\nimport { addBookmark } from \"./../../_actions/bookmarks\";\nimport { getComments, comment } from \"./../../_actions/getComments\";\n\nimport { Link } from \"react-router-dom\";\nimport './Post.css'\nimport { Avatar } from \"@material-ui/core\"\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\n\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\n\nimport { Button } from \"semantic-ui-react\";\nimport ReactHtmlParser from 'react-html-parser';\nimport Autolinker from 'autolinker';\n\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction Comments(props) {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    \n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n\n        setOpen(false);\n    };\n\n    const postId=props.postId;\n    const id = props.id;\n    const token = props.token;\n\n    console.log(postId);\n\n\n\n    useEffect(() => {\n        dispatch(getComments(postId));\n    }, [postId,dispatch]);\n\n    let comments = useSelector((state) => state)\n    console.log(comments);\n    return (\n            <>\n            {console.log(\"Hello\")}\n            </>\n    //     <div>\n    //         <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n    //             <ChatBubbleOutlineIcon fontSize=\"small\" />Comments: {comments.length}\n    //   </Button>\n    //         <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n    //             <DialogTitle id=\"form-dialog-title\">Please Type your comment below</DialogTitle>\n    //             <DialogContent>\n    //                 <DialogContentText>\n    //                     To subscribe to this website, please enter your email address here. We will send updates\n    //                     occasionally.\n    //       </DialogContentText>\n    //                 <TextField\n    //                     autoFocus\n    //                     margin=\"dense\"\n    //                     id=\"name\"\n    //                     label=\"Comment\"\n    //                     type=\"text\"\n    //                     fullWidth\n    //                 />\n    //             </DialogContent>\n    //             <DialogActions>\n    //                 <Button onClick={handleClose} color=\"primary\">\n    //                     Cancel\n    //       </Button>\n    //                 <Button onClick={(e) => {\n    //                     handleClose();\n                       \n\n\n    //                 }}\n    //                     color=\"primary\">\n    //                     Comment\n    //       </Button>\n    //             </DialogActions>\n    //         </Dialog>\n    //     </div>\n\n    );\n\n\n\n\n\n}\n\nexport default Comments\n"]},"metadata":{},"sourceType":"module"}