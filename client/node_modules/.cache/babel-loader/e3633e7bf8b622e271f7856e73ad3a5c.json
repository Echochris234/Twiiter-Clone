{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { getPosts, deletePost, likePost, getAllPosts } from \"./../../_actions/getPosts\";\nimport { getBookmarks } from \"./../../_actions/bookmarks\";\nimport { addBookmark } from \"./../../_actions/bookmarks\";\nimport './Post.css';\nimport { Avatar } from \"@material-ui/core\";\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport axios from 'axios';\nimport { Item, Icon, Button } from \"semantic-ui-react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post(props) {\n  _s();\n\n  const id = props.id;\n  const token = props.token;\n  const tweets = props.tweet;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  console.log(props);\n  useEffect(() => {\n    if (props.tabName === \"home\") {\n      dispatch(getAllPosts());\n    } else if (props.tabName === \"profile\") {\n      console.log(id);\n      dispatch(getPosts(id));\n    } else if (props.tabName === \"bookmarks\") {\n      console.log(\"IM IN BOOKMARKS\");\n      dispatch(getBookmarks(id, token));\n    }\n\n    ;\n  }, [id, token, dispatch]); //  const posts = useSelector((state) => state.handlePost.postData) || []\n\n  const posts = useSelector(state => {\n    if (props.tabName === \"bookmarks\") {\n      return state.bookmarks;\n    } else if (props.tabName === \"profile\" || \"home\") {\n      return state.handlePost.postData;\n    }\n  });\n  console.log(userPost);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) // <>\n  //   {posts.length!==0?(\n  //       <>\n  //         {posts.map((post)=>{\n  //             return(\n  //             <div className=\"post\">\n  //                <div className=\"post__avatar\">\n  //                     <Avatar src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\n  //                 </div> \n  //                 <div className=\"post__body\">\n  //                     <div className=\"post__header\">\n  //                         <div className=\"post__headerText\">\n  //                             <h3>\n  //                                 {post.author.name}\n  //                                 <span className=\"post_headerSpecial\">\n  //                                     <VerifiedUserIcon className=\"post_badge\" /> @{post.author.email}\n  //                                 </span>\n  //                             </h3>\n  //                         </div>\n  //                         <div className=\"post__headerDescription\">\n  //                             <p>\n  //                                {post.article}\n  //                             </p>\n  //                         </div>\n  //                         {/* <img src=\"https://images.unsplash.com/photo-1518965493882-35b838ace024?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8Z2lmfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60s\" alt=\"\"/> */}\n  //                         <div className=\"post__footer\">\n  //                             <ChatBubbleOutlineIcon fontSize=\"small\"/>\n  //                                 {post.author._id === id ? <Button\n  //                                     onClick={(e) => {\n  //                                         dispatch(deletePost(post._id, token));\n  //                                         history.push(`/${props.tabName}`)\n  //                                     }}\n  //                                 >\n  //                                     <RepeatIcon fontSize=\"small\" />Delete\n  //                   </Button> : <></>}\n  //                             {/* <FavoriteBorderIcon fontSize=\"small\"/>{props.post.likes.length} */}\n  //                             <Button\n  //                                 onClick={(e) => {\n  //                                     dispatch(likePost(post._id, token));\n  //                                     // history.push(`/${props.tabName}`) \n  //                                     // window.location.reload(false); \n  //                                 }}\n  //                             >\n  //                                     <FavoriteBorderIcon fontSize=\"small\" /> Likes:  {post.likes.length}\n  //                         </Button>\n  //                             {/* {post.likes.length} */}\n  //                                 <Button\n  //                                     onClick={(e) => {\n  //                                         dispatch(addBookmark(id, post._id, token));\n  //                                     }}\n  //                                 >\n  //                                     <PublishIcon fontSize=\"small\" /> Bookmark  \n  //                              </Button>\n  //                         </div>\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //             );\n  //         })}\n  //       </>\n  //   ):\n  //   <>\n  //   {/* <h1>NO POST FOUND</h1> */}\n  //   <></>\n  //   </>\n  //   }\n  // </>\n  ; // })\n}\n\n_s(Post, \"4Cp8D6wOp4vDeROVUptwyrljdhU=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/polo/Desktop/DanielleStart/Twitter-Clone/client/src/_components/post/Post.js"],"names":["React","useEffect","useDispatch","useSelector","useHistory","getPosts","deletePost","likePost","getAllPosts","getBookmarks","addBookmark","Avatar","VerifiedUserIcon","ChatBubbleOutlineIcon","RepeatIcon","FavoriteBorderIcon","PublishIcon","axios","Item","Icon","Button","Post","props","id","token","tweets","tweet","dispatch","history","console","log","tabName","posts","state","bookmarks","handlePost","postData","userPost"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,QAA/B,EAAyCC,WAAzC,QAA4D,2BAA5D;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,WAAT,QAA2B,4BAA3B;AAEA,OAAO,YAAP;AACA,SAASC,MAAT,QAAsB,mBAAtB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAMC,EAAE,GAAED,KAAK,CAACC,EAAhB;AACA,QAAMC,KAAK,GAAEF,KAAK,CAACE,KAAnB;AACA,QAAMC,MAAM,GAACH,KAAK,CAACI,KAAnB;AACA,QAAMC,QAAQ,GAAGzB,WAAW,EAA5B;AACA,QAAM0B,OAAO,GAAGxB,UAAU,EAA1B;AACJyB,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEIrB,EAAAA,SAAS,CAAE,MAAI;AACX,QAAGqB,KAAK,CAACS,OAAN,KAAgB,MAAnB,EAA0B;AACtBJ,MAAAA,QAAQ,CAACnB,WAAW,EAAZ,CAAR;AAEH,KAHD,MAGM,IAAGc,KAAK,CAACS,OAAN,KAAgB,SAAnB,EAA6B;AAC/BF,MAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACAI,MAAAA,QAAQ,CAACtB,QAAQ,CAACkB,EAAD,CAAT,CAAR;AACH,KAHK,MAGA,IAAGD,KAAK,CAACS,OAAN,KAAgB,WAAnB,EAA+B;AACjCF,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAH,MAAAA,QAAQ,CAAClB,YAAY,CAACc,EAAD,EAAIC,KAAJ,CAAb,CAAR;AACH;;AAGD;AACH,GAdQ,EAcP,CAACD,EAAD,EAAIC,KAAJ,EAAUG,QAAV,CAdO,CAAT,CARiB,CAyBjB;;AAGA,QAAMK,KAAK,GAAG7B,WAAW,CAAE8B,KAAD,IAAW;AACjC,QAAIX,KAAK,CAACS,OAAN,KAAkB,WAAtB,EAAmC;AAC9B,aAAOE,KAAK,CAACC,SAAb;AAEJ,KAHD,MAGM,IAAGZ,KAAK,CAACS,OAAN,KAAgB,SAAhB,IAA2B,MAA9B,EAAqC;AACxC,aAAOE,KAAK,CAACE,UAAN,CAAiBC,QAAxB;AACF;AACJ,GAPwB,CAAzB;AAQAP,EAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AAEA,sBACA,qCADA,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAzFA,GAtCiB,CAoIrB;AAIC;;GAxIQhB,I;UAIYnB,W,EACDE,U,EAuBFD,W;;;KA5BTkB,I;AA0IT,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { getPosts, deletePost, likePost, getAllPosts } from \"./../../_actions/getPosts\";\nimport { getBookmarks } from \"./../../_actions/bookmarks\";\nimport { addBookmark} from \"./../../_actions/bookmarks\";\n\nimport './Post.css'\nimport { Avatar} from \"@material-ui/core\"\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport axios from 'axios';\nimport { Item, Icon, Button } from \"semantic-ui-react\";\nfunction Post(props) {\n    const id= props.id;\n    const token =props.token;\n    const tweets=props.tweet;\n    const dispatch = useDispatch();\n    const history = useHistory();\nconsole.log(props);\n\n    useEffect (()=>{\n        if(props.tabName===\"home\"){\n            dispatch(getAllPosts());\n\n        }else if(props.tabName===\"profile\"){\n            console.log(id)\n            dispatch(getPosts(id));\n        }else if(props.tabName===\"bookmarks\"){\n            console.log(\"IM IN BOOKMARKS\");\n            dispatch(getBookmarks(id,token))\n        }\n        \n        \n        ;\n    },[id,token,dispatch]);\n    \n\n    //  const posts = useSelector((state) => state.handlePost.postData) || []\n\n \n    const posts = useSelector((state) => {\n        if (props.tabName === \"bookmarks\") {\n             return state.bookmarks\n\n        }else if(props.tabName===\"profile\"||\"home\"){\n           return state.handlePost.postData\n        }\n    })\n    console.log(userPost);\n        \n    return (\n    <></>\n    // <>\n    //   {posts.length!==0?(\n    //       <>\n    //         {posts.map((post)=>{\n    //             return(\n\n    //             <div className=\"post\">\n    //                <div className=\"post__avatar\">\n    //                     <Avatar src=\"https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\n    //                 </div> \n    //                 <div className=\"post__body\">\n    //                     <div className=\"post__header\">\n    //                         <div className=\"post__headerText\">\n    //                             <h3>\n\n    //                                 {post.author.name}\n    //                                 <span className=\"post_headerSpecial\">\n    //                                     <VerifiedUserIcon className=\"post_badge\" /> @{post.author.email}\n    //                                 </span>\n    //                             </h3>\n\n    //                         </div>\n\n    //                         <div className=\"post__headerDescription\">\n    //                             <p>\n    //                                {post.article}\n    //                             </p>\n\n    //                         </div>\n\n    //                         {/* <img src=\"https://images.unsplash.com/photo-1518965493882-35b838ace024?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8Z2lmfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60s\" alt=\"\"/> */}\n\n    //                         <div className=\"post__footer\">\n    //                             <ChatBubbleOutlineIcon fontSize=\"small\"/>\n\n    //                                 {post.author._id === id ? <Button\n    //                                     onClick={(e) => {\n    //                                         dispatch(deletePost(post._id, token));\n    //                                         history.push(`/${props.tabName}`)\n    //                                     }}\n    //                                 >\n    //                                     <RepeatIcon fontSize=\"small\" />Delete\n    //                   </Button> : <></>}\n                                    \n                                \n    //                             {/* <FavoriteBorderIcon fontSize=\"small\"/>{props.post.likes.length} */}\n    //                             <Button\n    //                                 onClick={(e) => {\n    //                                     dispatch(likePost(post._id, token));\n    //                                     // history.push(`/${props.tabName}`) \n    //                                     // window.location.reload(false); \n                                    \n    //                                 }}\n    //                             >\n    //                                     <FavoriteBorderIcon fontSize=\"small\" /> Likes:  {post.likes.length}\n    //                         </Button>\n\n    //                             {/* {post.likes.length} */}\n    //                                 <Button\n    //                                     onClick={(e) => {\n    //                                         dispatch(addBookmark(id, post._id, token));\n    //                                     }}\n    //                                 >\n    //                                     <PublishIcon fontSize=\"small\" /> Bookmark  \n    //                              </Button>\n                             \n\n    //                         </div>\n    //                     </div>\n\n\n    //                 </div>\n\n    //             </div>\n    //             );\n    //         })}\n\n    //       </>\n    //   ):\n    //   <>\n    //   {/* <h1>NO POST FOUND</h1> */}\n    //   <></>\n\n    //   </>\n      \n      \n    //   }\n    // </>\n    \n    \n    );\n\n// })\n\n\n\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}